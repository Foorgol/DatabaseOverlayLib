/* 
 * File:   DbTab.cpp
 * Author: volker
 * 
 * Created on February 9, 2014, 5:04 PM
 */

#include "DbTab.h"

namespace dbOverlay
{
  QHash<QString, DbTab> DbTab::tabCache;

//----------------------------------------------------------------------------

  DbTab DbTab::getTab(GenericDatabase* _db, const QString& _tabName)
  {
    QHash<QString, DbTab>::const_iterator i = tabCache.find(_tabName);
    while (i != tabCache.end())
    {
      if ((*i).db == _db)
      {
        return (*i);
      }
    }
    
    DbTab newTab(_db, _tabName);
    tabCache.insert(_tabName, newTab);
    
    return newTab;
  }

//----------------------------------------------------------------------------

  DbTab::~DbTab()
  {
  }

//----------------------------------------------------------------------------

  DbTab GenericDatabase::getTab(const QString& name)
  {
    return DbTab::getTab(this, name);
  }
  
  DbTab GenericDatabase::operator [](const QString& name)
  {
    return DbTab::getTab(this, name);
  }
  
//----------------------------------------------------------------------------

  DbTab::DbTab(GenericDatabase* _db, const QString& _tabName)
  : CommonTabularClass (_db, _tabName, false)
  {

  }

//----------------------------------------------------------------------------

  void DbTab::clearTabCache()
  {
    tabCache.clear();
  }

//----------------------------------------------------------------------------


//----------------------------------------------------------------------------


//----------------------------------------------------------------------------


//----------------------------------------------------------------------------


//----------------------------------------------------------------------------


//----------------------------------------------------------------------------


//----------------------------------------------------------------------------


//----------------------------------------------------------------------------


//----------------------------------------------------------------------------


//----------------------------------------------------------------------------


//----------------------------------------------------------------------------


//----------------------------------------------------------------------------


//----------------------------------------------------------------------------


//----------------------------------------------------------------------------


//----------------------------------------------------------------------------


//----------------------------------------------------------------------------


//----------------------------------------------------------------------------


//----------------------------------------------------------------------------


//----------------------------------------------------------------------------


//----------------------------------------------------------------------------


//----------------------------------------------------------------------------

}